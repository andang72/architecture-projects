<?xml version="1.0" encoding="UTF-8"?>
<sqlset>
	<name>COMMUNITY_USER</name>
	<description>COMMUNITY 쿼리</description>	
	<sql-query name="SELECT_USER_BY_ID" description="USER_ID 에 해당하는 사용자를 조회"><![CDATA[
		SELECT 
		  USER_ID,
		  USERNAME,
		  PASSWORD_HASH,
		  NAME,
		  NAME_VISIBLE,
		  FIRST_NAME,
		  LAST_NAME,
		  EMAIL,
		  EMAIL_VISIBLE,
		  USER_ENABLED,
		  STATUS,
		  CREATION_DATE,
		  MODIFIED_DATE
		FROM MUSI_USER WHERE USER_ID = ?
    ]]></sql-query>	

	<sql-query name="SELECT_USER_BY_USERNAME" description="USERNAME 에 해당하는 사용자를 조회"><![CDATA[
		SELECT 
		  USER_ID,
		  USERNAME,
		  PASSWORD_HASH,
		  NAME,
		  NAME_VISIBLE,
		  FIRST_NAME,
		  LAST_NAME,
		  EMAIL,
		  EMAIL_VISIBLE,
		  USER_ENABLED,
		  STATUS,
		  CREATION_DATE,
		  MODIFIED_DATE
		FROM MUSI_USER WHERE USERNAME = ?
    ]]></sql-query>	

	<sql-query name="SELECT_USER_BY_USERNAME_LOWERCASE" description="USERNAME 에 해당하는 사용자를 조회"><![CDATA[
		SELECT 
		  USER_ID,
		  USERNAME,
		  PASSWORD_HASH,
		  NAME,
		  NAME_VISIBLE,
		  FIRST_NAME,
		  LAST_NAME,
		  EMAIL,
		  EMAIL_VISIBLE,
		  USER_ENABLED,
		  STATUS,
		  CREATION_DATE,
		  MODIFIED_DATE
		FROM MUSI_USER WHERE LOWER( USERNAME ) = ?
    ]]></sql-query>	

	<sql-query name="SELECT_USER_BY_EMAIL" description="EMAIL 에 해당하는 사용자를 조회"><![CDATA[
		SELECT 
		  USER_ID,
		  USERNAME,
		  PASSWORD_HASH,
		  NAME,
		  NAME_VISIBLE,
		  FIRST_NAME,
		  LAST_NAME,
		  EMAIL,
		  EMAIL_VISIBLE,
		  USER_ENABLED,
		  STATUS,
		  CREATION_DATE,
		  MODIFIED_DATE
		FROM MUSI_USER WHERE USER_ENABLED = 1 AND EMAIL LIKE ?
    ]]></sql-query>	    
    
 	<sql-query name="CREATE_USER" description="사용자 생성"><![CDATA[
		INSERT INTO MUSI_USER (
		  USER_ID,
		  USERNAME,
		  PASSWORD_HASH,
		  NAME,
		  NAME_VISIBLE,
		  FIRST_NAME,
		  LAST_NAME,
		  EMAIL,
		  EMAIL_VISIBLE,
		  USER_ENABLED,
		  STATUS,
		  CREATION_DATE,
		  MODIFIED_DATE
		) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
    ]]></sql-query>	
    
    <sql-query name="DELETE_USER_BY_ID" description="사용자 삭제"><![CDATA[
    DELETE MUSI_USER WHERE USER_ID = ?
     ]]></sql-query>
     
     
     
	<sql-query name="CREATE_ROLE" description="CREATE_ROLE"><![CDATA[                 
    INSERT INTO MUSI_ROLE ( 
    	ROLE_ID, 
    	NAME,
    	DESCRIPTION, 
    	CREATION_DATE, 
    	MODIFIED_DATE 
    ) VALUES ( ?, ?, ?, ?, ? )
    ]]></sql-query>

	<sql-query name="DELETE_ROLE" description="DELETE_ROLE"><![CDATA[                 
    DELETE FROM MUSI_ROLE WHERE ROLE_ID = ? 
    ]]></sql-query>

	<sql-query name="UPDATE_ROLE" description="CREATE_ROLE"><![CDATA[                 
    UPDATE MUSI_ROLE
	SET  NAME          = ?,
	       DESCRIPTION   = ?,
	       MODIFIED_DATE = ?
	WHERE  ROLE_ID       = ?
    ]]></sql-query>

	<sql-query name="SELECT_ROLE_BY_ID" description="SELECT_ROLE_BY_ID"><![CDATA[                 
    SELECT 
        ROLE_ID, 
        NAME,  
        DESCRIPTION, 
        CREATION_DATE, 
        MODIFIED_DATE
	FROM MUSI_ROLE 
	WHERE ROLE_ID = ?
    ]]></sql-query>

	<sql-query name="SELECT_ROLE_BY_NAME" description="SELECT_ROLE_BY_NAME"><dynamic><![CDATA[
    SELECT
   		ROLE_ID, 
   		NAME, 
   		DESCRIPTION, 
  		CREATION_DATE, 
  		MODIFIED_DATE
  	FROM MUSI_ROLE 
  	WHERE <#if additional_parameter > LOWER(NAME) = ? <#else> NAME = ? </#if>
    ]]></dynamic></sql-query>

	<sql-query name="COUNT_ALL_ROLES" description="COUNT_ALL_ROLES"><![CDATA[
    SELECT count(ROLE_ID) FROM MUSI_ROLE
    ]]></sql-query>

	<sql-query name="SELECT_ALL_ROLE_IDS" description="SELECT_ALL_ROLE_IDS"><![CDATA[
    SELECT ROLE_ID FROM MUSI_ROLE
    ]]></sql-query>

    <sql-query name="DELETE_ALL_USER_ROLES" description="DELETE_ALL_USER_ROLES"><![CDATA[
    DELETE FROM MUSI_USER_ROLES WHERE ROLE_ID = ?
    ]]></sql-query>
        
    <sql-query name="SELECT_USER_ROLE_IDS" description="SELECT_USER_ROLE_IDS"><![CDATA[
    SELECT ROLE_ID FROM MUSI_USER_ROLES WHERE USER_ID = ?
    ]]></sql-query>
    
   	<sql-query name="REMOVE_USER_ROLES" description="REMOVE_USER_ROLES"><![CDATA[
   	DELETE FROM MUSI_USER_ROLES WHERE USER_ID = ?
    ]]></sql-query>
        
   	<sql-query name="REMOVE_USER_ROLE" description="REMOVE_USER_ROLE"><![CDATA[
   	DELETE FROM MUSI_USER_ROLES WHERE ROLE_ID = ? AND USER_ID = ?
    ]]></sql-query>
    
    <sql-query name="ADD_USER_ROLE" description="ADD_USER_ROLE"><![CDATA[
     INSERT INTO MUSI_USER_ROLES ( 
    	ROLE_ID, 
    	USER_ID
    ) VALUES ( ?, ? )
    ]]></sql-query>
                   	
</sqlset>